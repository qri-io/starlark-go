// Protocol messages for testing.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: testdata/test/test.proto

package test

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Coin int32

const (
	Coin_PENNY   Coin = 1
	Coin_NICKEL  Coin = 5
	Coin_DIME    Coin = 10
	Coin_QUARTER Coin = 25
)

// Enum value maps for Coin.
var (
	Coin_name = map[int32]string{
		1:  "PENNY",
		5:  "NICKEL",
		10: "DIME",
		25: "QUARTER",
	}
	Coin_value = map[string]int32{
		"PENNY":   1,
		"NICKEL":  5,
		"DIME":    10,
		"QUARTER": 25,
	}
)

func (x Coin) Enum() *Coin {
	p := new(Coin)
	*p = x
	return p
}

func (x Coin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Coin) Descriptor() protoreflect.EnumDescriptor {
	return file_testdata_test_test_proto_enumTypes[0].Descriptor()
}

func (Coin) Type() protoreflect.EnumType {
	return &file_testdata_test_test_proto_enumTypes[0]
}

func (x Coin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Coin) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Coin(num)
	return nil
}

// Deprecated: Use Coin.Descriptor instead.
func (Coin) EnumDescriptor() ([]byte, []int) {
	return file_testdata_test_test_proto_rawDescGZIP(), []int{0}
}

type Suit int32

const (
	Suit_SPADES   Suit = 1
	Suit_HEARTS   Suit = 2
	Suit_DIAMONDS Suit = 3
	Suit_CLUBS    Suit = 4
)

// Enum value maps for Suit.
var (
	Suit_name = map[int32]string{
		1: "SPADES",
		2: "HEARTS",
		3: "DIAMONDS",
		4: "CLUBS",
	}
	Suit_value = map[string]int32{
		"SPADES":   1,
		"HEARTS":   2,
		"DIAMONDS": 3,
		"CLUBS":    4,
	}
)

func (x Suit) Enum() *Suit {
	p := new(Suit)
	*p = x
	return p
}

func (x Suit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Suit) Descriptor() protoreflect.EnumDescriptor {
	return file_testdata_test_test_proto_enumTypes[1].Descriptor()
}

func (Suit) Type() protoreflect.EnumType {
	return &file_testdata_test_test_proto_enumTypes[1]
}

func (x Suit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Suit) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Suit(num)
	return nil
}

// Deprecated: Use Suit.Descriptor instead.
func (Suit) EnumDescriptor() ([]byte, []int) {
	return file_testdata_test_test_proto_rawDescGZIP(), []int{1}
}

type M struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	Bool    *bool           `protobuf:"varint,1,opt,name=bool" json:"bool,omitempty"`
	Int32   *int32          `protobuf:"varint,2,opt,name=int32" json:"int32,omitempty"`
	Uint32  *uint32         `protobuf:"varint,3,opt,name=uint32" json:"uint32,omitempty"`
	Int64   *int64          `protobuf:"varint,4,opt,name=int64" json:"int64,omitempty"`
	Uint64  *uint64         `protobuf:"varint,5,opt,name=uint64" json:"uint64,omitempty"`
	Float   *float32        `protobuf:"fixed32,6,opt,name=float" json:"float,omitempty"`
	Double  *float64        `protobuf:"fixed64,7,opt,name=double" json:"double,omitempty"`
	String_ *string         `protobuf:"bytes,8,opt,name=string" json:"string,omitempty"`
	Bytes   []byte          `protobuf:"bytes,9,opt,name=bytes" json:"bytes,omitempty"`
	Kv      *KeyValuePair   `protobuf:"bytes,10,opt,name=kv" json:"kv,omitempty"`
	Inner   *M_Inner        `protobuf:"bytes,11,opt,name=inner" json:"inner,omitempty"`
	Outer   *Outer          `protobuf:"bytes,12,opt,name=outer" json:"outer,omitempty"`
	Coin    *Coin           `protobuf:"varint,13,opt,name=coin,enum=test.Coin" json:"coin,omitempty"`
	Bools   []bool          `protobuf:"varint,31,rep,name=bools" json:"bools,omitempty"`
	Int32S  []int32         `protobuf:"varint,32,rep,name=int32s" json:"int32s,omitempty"`
	Int64S  []int64         `protobuf:"varint,33,rep,name=int64s" json:"int64s,omitempty"`
	Uint32S []uint32        `protobuf:"varint,34,rep,name=uint32s" json:"uint32s,omitempty"`
	Uint64S []uint64        `protobuf:"varint,35,rep,name=uint64s" json:"uint64s,omitempty"`
	Floats  []float32       `protobuf:"fixed32,36,rep,name=floats" json:"floats,omitempty"`
	Doubles []float64       `protobuf:"fixed64,37,rep,name=doubles" json:"doubles,omitempty"`
	Strings []string        `protobuf:"bytes,38,rep,name=strings" json:"strings,omitempty"`
	Byteses [][]byte        `protobuf:"bytes,39,rep,name=byteses" json:"byteses,omitempty"`
	Kvs     []*KeyValuePair `protobuf:"bytes,40,rep,name=kvs" json:"kvs,omitempty"`
	Inners  []*M_Inner      `protobuf:"bytes,41,rep,name=inners" json:"inners,omitempty"`
	Outers  []*Outer        `protobuf:"bytes,42,rep,name=outers" json:"outers,omitempty"`
	Coins   []Coin          `protobuf:"varint,43,rep,name=coins,enum=test.Coin" json:"coins,omitempty"`
}

func (x *M) Reset() {
	*x = M{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_test_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M) ProtoMessage() {}

func (x *M) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_test_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M.ProtoReflect.Descriptor instead.
func (*M) Descriptor() ([]byte, []int) {
	return file_testdata_test_test_proto_rawDescGZIP(), []int{0}
}

var extRange_M = []protoiface.ExtensionRangeV1{
	{Start: 100, End: 200},
}

// Deprecated: Use M.ProtoReflect.Descriptor.ExtensionRanges instead.
func (*M) ExtensionRangeArray() []protoiface.ExtensionRangeV1 {
	return extRange_M
}

func (x *M) GetBool() bool {
	if x != nil && x.Bool != nil {
		return *x.Bool
	}
	return false
}

func (x *M) GetInt32() int32 {
	if x != nil && x.Int32 != nil {
		return *x.Int32
	}
	return 0
}

func (x *M) GetUint32() uint32 {
	if x != nil && x.Uint32 != nil {
		return *x.Uint32
	}
	return 0
}

func (x *M) GetInt64() int64 {
	if x != nil && x.Int64 != nil {
		return *x.Int64
	}
	return 0
}

func (x *M) GetUint64() uint64 {
	if x != nil && x.Uint64 != nil {
		return *x.Uint64
	}
	return 0
}

func (x *M) GetFloat() float32 {
	if x != nil && x.Float != nil {
		return *x.Float
	}
	return 0
}

func (x *M) GetDouble() float64 {
	if x != nil && x.Double != nil {
		return *x.Double
	}
	return 0
}

func (x *M) GetString_() string {
	if x != nil && x.String_ != nil {
		return *x.String_
	}
	return ""
}

func (x *M) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *M) GetKv() *KeyValuePair {
	if x != nil {
		return x.Kv
	}
	return nil
}

func (x *M) GetInner() *M_Inner {
	if x != nil {
		return x.Inner
	}
	return nil
}

func (x *M) GetOuter() *Outer {
	if x != nil {
		return x.Outer
	}
	return nil
}

func (x *M) GetCoin() Coin {
	if x != nil && x.Coin != nil {
		return *x.Coin
	}
	return Coin_PENNY
}

func (x *M) GetBools() []bool {
	if x != nil {
		return x.Bools
	}
	return nil
}

func (x *M) GetInt32S() []int32 {
	if x != nil {
		return x.Int32S
	}
	return nil
}

func (x *M) GetInt64S() []int64 {
	if x != nil {
		return x.Int64S
	}
	return nil
}

func (x *M) GetUint32S() []uint32 {
	if x != nil {
		return x.Uint32S
	}
	return nil
}

func (x *M) GetUint64S() []uint64 {
	if x != nil {
		return x.Uint64S
	}
	return nil
}

func (x *M) GetFloats() []float32 {
	if x != nil {
		return x.Floats
	}
	return nil
}

func (x *M) GetDoubles() []float64 {
	if x != nil {
		return x.Doubles
	}
	return nil
}

func (x *M) GetStrings() []string {
	if x != nil {
		return x.Strings
	}
	return nil
}

func (x *M) GetByteses() [][]byte {
	if x != nil {
		return x.Byteses
	}
	return nil
}

func (x *M) GetKvs() []*KeyValuePair {
	if x != nil {
		return x.Kvs
	}
	return nil
}

func (x *M) GetInners() []*M_Inner {
	if x != nil {
		return x.Inners
	}
	return nil
}

func (x *M) GetOuters() []*Outer {
	if x != nil {
		return x.Outers
	}
	return nil
}

func (x *M) GetCoins() []Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

type KeyValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_test_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_test_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_testdata_test_test_proto_rawDescGZIP(), []int{1}
}

func (x *KeyValuePair) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *KeyValuePair) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Outer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Outer) Reset() {
	*x = Outer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_test_test_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Outer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Outer) ProtoMessage() {}

func (x *Outer) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_test_test_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Outer.ProtoReflect.Descriptor instead.
func (*Outer) Descriptor() ([]byte, []int) {
	return file_testdata_test_test_proto_rawDescGZIP(), []int{2}
}

// D has interesting defaults.
type D struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bool    *bool    `protobuf:"varint,1,opt,name=bool,def=1" json:"bool,omitempty"`
	Int32   *int32   `protobuf:"varint,2,opt,name=int32,def=123" json:"int32,omitempty"`
	Float   *float32 `protobuf:"fixed32,3,opt,name=float,def=1.25" json:"float,omitempty"`
	String_ *string  `protobuf:"bytes,4,opt,name=string,def=hello" json:"string,omitempty"`
	Coin    *Coin    `protobuf:"varint,5,opt,name=coin,enum=test.Coin,def=25" json:"coin,omitempty"`
}

// Default values for D fields.
const (
	Default_D_Bool    = bool(true)
	Default_D_Int32   = int32(123)
	Default_D_Float   = float32(1.25)
	Default_D_String_ = string("hello")
	Default_D_Coin    = Coin_QUARTER
)

func (x *D) Reset() {
	*x = D{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_test_test_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*D) ProtoMessage() {}

func (x *D) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_test_test_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use D.ProtoReflect.Descriptor instead.
func (*D) Descriptor() ([]byte, []int) {
	return file_testdata_test_test_proto_rawDescGZIP(), []int{3}
}

func (x *D) GetBool() bool {
	if x != nil && x.Bool != nil {
		return *x.Bool
	}
	return Default_D_Bool
}

func (x *D) GetInt32() int32 {
	if x != nil && x.Int32 != nil {
		return *x.Int32
	}
	return Default_D_Int32
}

func (x *D) GetFloat() float32 {
	if x != nil && x.Float != nil {
		return *x.Float
	}
	return Default_D_Float
}

func (x *D) GetString_() string {
	if x != nil && x.String_ != nil {
		return *x.String_
	}
	return Default_D_String_
}

func (x *D) GetCoin() Coin {
	if x != nil && x.Coin != nil {
		return *x.Coin
	}
	return Default_D_Coin
}

type M_Inner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int32 *int32   `protobuf:"varint,1,opt,name=int32" json:"int32,omitempty"`
	Inner *M_Inner `protobuf:"bytes,2,opt,name=inner" json:"inner,omitempty"`
}

func (x *M_Inner) Reset() {
	*x = M_Inner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_test_test_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M_Inner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M_Inner) ProtoMessage() {}

func (x *M_Inner) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_test_test_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M_Inner.ProtoReflect.Descriptor instead.
func (*M_Inner) Descriptor() ([]byte, []int) {
	return file_testdata_test_test_proto_rawDescGZIP(), []int{0, 0}
}

func (x *M_Inner) GetInt32() int32 {
	if x != nil && x.Int32 != nil {
		return *x.Int32
	}
	return 0
}

func (x *M_Inner) GetInner() *M_Inner {
	if x != nil {
		return x.Inner
	}
	return nil
}

var file_testdata_test_test_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*M)(nil),
		ExtensionType: (*int32)(nil),
		Field:         100,
		Name:          "test.ext",
		Tag:           "varint,100,opt,name=ext",
		Filename:      "testdata/test/test.proto",
	},
	{
		ExtendedType:  (*M)(nil),
		ExtensionType: (*int32)(nil),
		Field:         101,
		Name:          "test.Outer.ext",
		Tag:           "varint,101,opt,name=ext",
		Filename:      "testdata/test/test.proto",
	},
}

// Extension fields to M.
var (
	// optional int32 ext = 100;
	E_Ext = &file_testdata_test_test_proto_extTypes[0] // M has a test.ext field
	// optional int32 ext = 101;
	E_Outer_Ext = &file_testdata_test_test_proto_extTypes[1] // M has an test.Outer.ext field
)

var File_testdata_test_test_proto protoreflect.FileDescriptor

var file_testdata_test_test_proto_rawDesc = []byte{
	0x0a, 0x18, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x65, 0x73, 0x74,
	0x22, 0x9a, 0x06, 0x0a, 0x01, 0x4d, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x02, 0x6b, 0x76, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x2e, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x05, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x08, 0x52, 0x05, 0x62,
	0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x18, 0x20,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x73, 0x18, 0x21, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x18,
	0x22, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x73, 0x18, 0x23, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x07, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x73, 0x18, 0x24, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x25, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x26, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x79, 0x74, 0x65, 0x73, 0x65, 0x73, 0x18,
	0x27, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x79, 0x74, 0x65, 0x73, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x03, 0x6b, 0x76, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x03, 0x6b, 0x76, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x29,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x2e, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x06, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x73, 0x18, 0x2a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x20, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x2b, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x0a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x05, 0x63, 0x6f, 0x69,
	0x6e, 0x73, 0x1a, 0x42, 0x0a, 0x05, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2a, 0x05, 0x08, 0x64, 0x10, 0xc9, 0x01, 0x22, 0x36, 0x0a,
	0x0c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x05, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x32, 0x19,
	0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x07, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x01, 0x44, 0x12,
	0x18, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74,
	0x72, 0x75, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x03, 0x31, 0x32, 0x33, 0x52, 0x05, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x3a, 0x04, 0x31, 0x2e, 0x32, 0x35, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x12, 0x1d, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x3a, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x27, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x3a, 0x07, 0x51, 0x55, 0x41, 0x52, 0x54,
	0x45, 0x52, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x2a, 0x34, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e,
	0x12, 0x09, 0x0a, 0x05, 0x50, 0x45, 0x4e, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4e,
	0x49, 0x43, 0x4b, 0x45, 0x4c, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x49, 0x4d, 0x45, 0x10,
	0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x51, 0x55, 0x41, 0x52, 0x54, 0x45, 0x52, 0x10, 0x19, 0x2a, 0x37,
	0x0a, 0x04, 0x53, 0x75, 0x69, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x50, 0x41, 0x44, 0x45, 0x53,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x45, 0x41, 0x52, 0x54, 0x53, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x53, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05,
	0x43, 0x4c, 0x55, 0x42, 0x53, 0x10, 0x04, 0x3a, 0x19, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x07,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65,
	0x78, 0x74, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72,
	0x6b, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x65, 0x73, 0x74,
}

var (
	file_testdata_test_test_proto_rawDescOnce sync.Once
	file_testdata_test_test_proto_rawDescData = file_testdata_test_test_proto_rawDesc
)

func file_testdata_test_test_proto_rawDescGZIP() []byte {
	file_testdata_test_test_proto_rawDescOnce.Do(func() {
		file_testdata_test_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_testdata_test_test_proto_rawDescData)
	})
	return file_testdata_test_test_proto_rawDescData
}

var file_testdata_test_test_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_testdata_test_test_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_testdata_test_test_proto_goTypes = []interface{}{
	(Coin)(0),            // 0: test.Coin
	(Suit)(0),            // 1: test.Suit
	(*M)(nil),            // 2: test.M
	(*KeyValuePair)(nil), // 3: test.KeyValuePair
	(*Outer)(nil),        // 4: test.Outer
	(*D)(nil),            // 5: test.D
	(*M_Inner)(nil),      // 6: test.M.Inner
}
var file_testdata_test_test_proto_depIdxs = []int32{
	3,  // 0: test.M.kv:type_name -> test.KeyValuePair
	6,  // 1: test.M.inner:type_name -> test.M.Inner
	4,  // 2: test.M.outer:type_name -> test.Outer
	0,  // 3: test.M.coin:type_name -> test.Coin
	3,  // 4: test.M.kvs:type_name -> test.KeyValuePair
	6,  // 5: test.M.inners:type_name -> test.M.Inner
	4,  // 6: test.M.outers:type_name -> test.Outer
	0,  // 7: test.M.coins:type_name -> test.Coin
	0,  // 8: test.D.coin:type_name -> test.Coin
	6,  // 9: test.M.Inner.inner:type_name -> test.M.Inner
	2,  // 10: test.ext:extendee -> test.M
	2,  // 11: test.Outer.ext:extendee -> test.M
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	10, // [10:12] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_testdata_test_test_proto_init() }
func file_testdata_test_test_proto_init() {
	if File_testdata_test_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_testdata_test_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_testdata_test_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_test_test_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Outer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_test_test_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*D); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_test_test_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M_Inner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testdata_test_test_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_testdata_test_test_proto_goTypes,
		DependencyIndexes: file_testdata_test_test_proto_depIdxs,
		EnumInfos:         file_testdata_test_test_proto_enumTypes,
		MessageInfos:      file_testdata_test_test_proto_msgTypes,
		ExtensionInfos:    file_testdata_test_test_proto_extTypes,
	}.Build()
	File_testdata_test_test_proto = out.File
	file_testdata_test_test_proto_rawDesc = nil
	file_testdata_test_test_proto_goTypes = nil
	file_testdata_test_test_proto_depIdxs = nil
}
