// Proto API for a hypothetical bug tracker---an example for testing.
//
// TODO(adonovan): test:
// - oneof, map, group.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: testdata/bugtracker/bugtracker.proto

package bugtracker

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Status int32

const (
	Status_NEW      Status = 0
	Status_ASSIGNED Status = 1
	Status_ACCEPTED Status = 2
	Status_FIXED    Status = 3
	Status_WONTFIX  Status = 5
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "NEW",
		1: "ASSIGNED",
		2: "ACCEPTED",
		3: "FIXED",
		5: "WONTFIX",
	}
	Status_value = map[string]int32{
		"NEW":      0,
		"ASSIGNED": 1,
		"ACCEPTED": 2,
		"FIXED":    3,
		"WONTFIX":  5,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_testdata_bugtracker_bugtracker_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_testdata_bugtracker_bugtracker_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Status(num)
	return nil
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_testdata_bugtracker_bugtracker_proto_rawDescGZIP(), []int{0}
}

type Type int32

const (
	Type_BUG     Type = 0
	Type_FEATURE Type = 1
	Type_OTHER   Type = 2
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "BUG",
		1: "FEATURE",
		2: "OTHER",
	}
	Type_value = map[string]int32{
		"BUG":     0,
		"FEATURE": 1,
		"OTHER":   2,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_testdata_bugtracker_bugtracker_proto_enumTypes[1].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_testdata_bugtracker_bugtracker_proto_enumTypes[1]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Type(num)
	return nil
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_testdata_bugtracker_bugtracker_proto_rawDescGZIP(), []int{1}
}

type Issue struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	Id       *int64          `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Category *string         `protobuf:"bytes,2,opt,name=category" json:"category,omitempty"`
	Status   *Status         `protobuf:"varint,3,opt,name=status,enum=bugtracker.Status" json:"status,omitempty"`
	Reporter *string         `protobuf:"bytes,4,opt,name=reporter" json:"reporter,omitempty"`
	Assignee *string         `protobuf:"bytes,5,opt,name=assignee" json:"assignee,omitempty"`
	Verifier *string         `protobuf:"bytes,6,opt,name=verifier" json:"verifier,omitempty"`
	Cc       []string        `protobuf:"bytes,7,rep,name=cc" json:"cc,omitempty"`
	Type     *Type           `protobuf:"varint,8,opt,name=type,enum=bugtracker.Type" json:"type,omitempty"`
	Priority *int32          `protobuf:"varint,9,opt,name=priority" json:"priority,omitempty"`
	Severity *uint32         `protobuf:"varint,10,opt,name=severity" json:"severity,omitempty"`
	Note     []string        `protobuf:"bytes,11,rep,name=note" json:"note,omitempty"`
	Metadata []*KeyValuePair `protobuf:"bytes,12,rep,name=metadata" json:"metadata,omitempty"`
	Nested   *Issue_Nested   `protobuf:"bytes,13,opt,name=nested" json:"nested,omitempty"`
	Score    *float32        `protobuf:"fixed32,14,opt,name=score" json:"score,omitempty"`
}

func (x *Issue) Reset() {
	*x = Issue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Issue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issue) ProtoMessage() {}

func (x *Issue) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issue.ProtoReflect.Descriptor instead.
func (*Issue) Descriptor() ([]byte, []int) {
	return file_testdata_bugtracker_bugtracker_proto_rawDescGZIP(), []int{0}
}

var extRange_Issue = []protoiface.ExtensionRangeV1{
	{Start: 100, End: 200},
}

// Deprecated: Use Issue.ProtoReflect.Descriptor.ExtensionRanges instead.
func (*Issue) ExtensionRangeArray() []protoiface.ExtensionRangeV1 {
	return extRange_Issue
}

func (x *Issue) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Issue) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *Issue) GetStatus() Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Status_NEW
}

func (x *Issue) GetReporter() string {
	if x != nil && x.Reporter != nil {
		return *x.Reporter
	}
	return ""
}

func (x *Issue) GetAssignee() string {
	if x != nil && x.Assignee != nil {
		return *x.Assignee
	}
	return ""
}

func (x *Issue) GetVerifier() string {
	if x != nil && x.Verifier != nil {
		return *x.Verifier
	}
	return ""
}

func (x *Issue) GetCc() []string {
	if x != nil {
		return x.Cc
	}
	return nil
}

func (x *Issue) GetType() Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Type_BUG
}

func (x *Issue) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *Issue) GetSeverity() uint32 {
	if x != nil && x.Severity != nil {
		return *x.Severity
	}
	return 0
}

func (x *Issue) GetNote() []string {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *Issue) GetMetadata() []*KeyValuePair {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Issue) GetNested() *Issue_Nested {
	if x != nil {
		return x.Nested
	}
	return nil
}

func (x *Issue) GetScore() float32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type KeyValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_testdata_bugtracker_bugtracker_proto_rawDescGZIP(), []int{1}
}

func (x *KeyValuePair) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *KeyValuePair) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Outer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Outer) Reset() {
	*x = Outer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Outer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Outer) ProtoMessage() {}

func (x *Outer) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Outer.ProtoReflect.Descriptor instead.
func (*Outer) Descriptor() ([]byte, []int) {
	return file_testdata_bugtracker_bugtracker_proto_rawDescGZIP(), []int{2}
}

type AllTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bool     *bool             `protobuf:"varint,1,opt,name=bool" json:"bool,omitempty"`
	Int32    *int32            `protobuf:"varint,2,opt,name=int32" json:"int32,omitempty"`
	Uint32   *uint32           `protobuf:"varint,3,opt,name=uint32" json:"uint32,omitempty"`
	Int64    *int64            `protobuf:"varint,4,opt,name=int64" json:"int64,omitempty"`
	Uint64   *uint64           `protobuf:"varint,7,opt,name=uint64" json:"uint64,omitempty"`
	Float    *float32          `protobuf:"fixed32,8,opt,name=float" json:"float,omitempty"`
	Double   *float64          `protobuf:"fixed64,9,opt,name=double" json:"double,omitempty"`
	String_  *string           `protobuf:"bytes,10,opt,name=string" json:"string,omitempty"`
	Bytes    []byte            `protobuf:"bytes,11,opt,name=bytes" json:"bytes,omitempty"`
	Status   *Status           `protobuf:"varint,12,opt,name=status,enum=bugtracker.Status" json:"status,omitempty"`
	Inner    *AllTypes_Inner   `protobuf:"bytes,13,opt,name=inner" json:"inner,omitempty"`
	Outer    *Outer            `protobuf:"bytes,14,opt,name=outer" json:"outer,omitempty"`
	Bools    []bool            `protobuf:"varint,31,rep,name=bools" json:"bools,omitempty"`
	Int32S   []int32           `protobuf:"varint,33,rep,name=int32s" json:"int32s,omitempty"`
	Int64S   []int64           `protobuf:"varint,34,rep,name=int64s" json:"int64s,omitempty"`
	Uint32S  []uint32          `protobuf:"varint,36,rep,name=uint32s" json:"uint32s,omitempty"`
	Uint64S  []uint64          `protobuf:"varint,37,rep,name=uint64s" json:"uint64s,omitempty"`
	Floats   []float32         `protobuf:"fixed32,38,rep,name=floats" json:"floats,omitempty"`
	Doubles  []float64         `protobuf:"fixed64,39,rep,name=doubles" json:"doubles,omitempty"`
	Strings  []string          `protobuf:"bytes,40,rep,name=strings" json:"strings,omitempty"`
	Byteses  [][]byte          `protobuf:"bytes,41,rep,name=byteses" json:"byteses,omitempty"`
	Statuses []Status          `protobuf:"varint,42,rep,name=statuses,enum=bugtracker.Status" json:"statuses,omitempty"`
	Inners   []*AllTypes_Inner `protobuf:"bytes,43,rep,name=inners" json:"inners,omitempty"`
	Outers   []*Outer          `protobuf:"bytes,44,rep,name=outers" json:"outers,omitempty"`
}

func (x *AllTypes) Reset() {
	*x = AllTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTypes) ProtoMessage() {}

func (x *AllTypes) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTypes.ProtoReflect.Descriptor instead.
func (*AllTypes) Descriptor() ([]byte, []int) {
	return file_testdata_bugtracker_bugtracker_proto_rawDescGZIP(), []int{3}
}

func (x *AllTypes) GetBool() bool {
	if x != nil && x.Bool != nil {
		return *x.Bool
	}
	return false
}

func (x *AllTypes) GetInt32() int32 {
	if x != nil && x.Int32 != nil {
		return *x.Int32
	}
	return 0
}

func (x *AllTypes) GetUint32() uint32 {
	if x != nil && x.Uint32 != nil {
		return *x.Uint32
	}
	return 0
}

func (x *AllTypes) GetInt64() int64 {
	if x != nil && x.Int64 != nil {
		return *x.Int64
	}
	return 0
}

func (x *AllTypes) GetUint64() uint64 {
	if x != nil && x.Uint64 != nil {
		return *x.Uint64
	}
	return 0
}

func (x *AllTypes) GetFloat() float32 {
	if x != nil && x.Float != nil {
		return *x.Float
	}
	return 0
}

func (x *AllTypes) GetDouble() float64 {
	if x != nil && x.Double != nil {
		return *x.Double
	}
	return 0
}

func (x *AllTypes) GetString_() string {
	if x != nil && x.String_ != nil {
		return *x.String_
	}
	return ""
}

func (x *AllTypes) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *AllTypes) GetStatus() Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Status_NEW
}

func (x *AllTypes) GetInner() *AllTypes_Inner {
	if x != nil {
		return x.Inner
	}
	return nil
}

func (x *AllTypes) GetOuter() *Outer {
	if x != nil {
		return x.Outer
	}
	return nil
}

func (x *AllTypes) GetBools() []bool {
	if x != nil {
		return x.Bools
	}
	return nil
}

func (x *AllTypes) GetInt32S() []int32 {
	if x != nil {
		return x.Int32S
	}
	return nil
}

func (x *AllTypes) GetInt64S() []int64 {
	if x != nil {
		return x.Int64S
	}
	return nil
}

func (x *AllTypes) GetUint32S() []uint32 {
	if x != nil {
		return x.Uint32S
	}
	return nil
}

func (x *AllTypes) GetUint64S() []uint64 {
	if x != nil {
		return x.Uint64S
	}
	return nil
}

func (x *AllTypes) GetFloats() []float32 {
	if x != nil {
		return x.Floats
	}
	return nil
}

func (x *AllTypes) GetDoubles() []float64 {
	if x != nil {
		return x.Doubles
	}
	return nil
}

func (x *AllTypes) GetStrings() []string {
	if x != nil {
		return x.Strings
	}
	return nil
}

func (x *AllTypes) GetByteses() [][]byte {
	if x != nil {
		return x.Byteses
	}
	return nil
}

func (x *AllTypes) GetStatuses() []Status {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *AllTypes) GetInners() []*AllTypes_Inner {
	if x != nil {
		return x.Inners
	}
	return nil
}

func (x *AllTypes) GetOuters() []*Outer {
	if x != nil {
		return x.Outers
	}
	return nil
}

type Issue_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *string       `protobuf:"bytes,1,opt,name=x" json:"x,omitempty"`
	Y *Issue_Nested `protobuf:"bytes,2,opt,name=y" json:"y,omitempty"`
}

func (x *Issue_Nested) Reset() {
	*x = Issue_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Issue_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issue_Nested) ProtoMessage() {}

func (x *Issue_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issue_Nested.ProtoReflect.Descriptor instead.
func (*Issue_Nested) Descriptor() ([]byte, []int) {
	return file_testdata_bugtracker_bugtracker_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Issue_Nested) GetX() string {
	if x != nil && x.X != nil {
		return *x.X
	}
	return ""
}

func (x *Issue_Nested) GetY() *Issue_Nested {
	if x != nil {
		return x.Y
	}
	return nil
}

type AllTypes_Inner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
}

func (x *AllTypes_Inner) Reset() {
	*x = AllTypes_Inner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTypes_Inner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTypes_Inner) ProtoMessage() {}

func (x *AllTypes_Inner) ProtoReflect() protoreflect.Message {
	mi := &file_testdata_bugtracker_bugtracker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTypes_Inner.ProtoReflect.Descriptor instead.
func (*AllTypes_Inner) Descriptor() ([]byte, []int) {
	return file_testdata_bugtracker_bugtracker_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AllTypes_Inner) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

var file_testdata_bugtracker_bugtracker_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*Issue)(nil),
		ExtensionType: (*int32)(nil),
		Field:         100,
		Name:          "bugtracker.ext",
		Tag:           "varint,100,opt,name=ext",
		Filename:      "testdata/bugtracker/bugtracker.proto",
	},
	{
		ExtendedType:  (*Issue)(nil),
		ExtensionType: (*int32)(nil),
		Field:         101,
		Name:          "bugtracker.Outer.ext",
		Tag:           "varint,101,opt,name=ext",
		Filename:      "testdata/bugtracker/bugtracker.proto",
	},
}

// Extension fields to Issue.
var (
	// optional int32 ext = 100;
	E_Ext = &file_testdata_bugtracker_bugtracker_proto_extTypes[0] // Issue has a buganizer.ext field
	// optional int32 ext = 101;
	E_Outer_Ext = &file_testdata_bugtracker_bugtracker_proto_extTypes[1] // Issue has an buganizer.Outer.ext field
)

var File_testdata_bugtracker_bugtracker_proto protoreflect.FileDescriptor

var file_testdata_bugtracker_bugtracker_proto_rawDesc = []byte{
	0x0a, 0x24, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x62, 0x75, 0x67, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x62, 0x75, 0x67, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x75, 0x67, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x22, 0xfa, 0x03, 0x0a, 0x05, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x75, 0x67, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x63, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x63, 0x63, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x62, 0x75, 0x67, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62,
	0x75, 0x67, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x30, 0x0a, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x62, 0x75, 0x67, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x06, 0x6e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x3e, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x78,
	0x12, 0x26, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x75,
	0x67, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x01, 0x79, 0x2a, 0x05, 0x08, 0x64, 0x10, 0xc9, 0x01, 0x22,
	0x36, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x05, 0x4f, 0x75, 0x74, 0x65, 0x72,
	0x32, 0x23, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x11, 0x2e, 0x62, 0x75, 0x67, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0xe3, 0x05, 0x0a, 0x08, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x62, 0x75, 0x67, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x75, 0x67, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x05,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x75,
	0x67, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x05,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x1f,
	0x20, 0x03, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x73, 0x18, 0x21, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x73, 0x18, 0x22, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x18, 0x24, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x73,
	0x18, 0x25, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x73, 0x18, 0x26, 0x20, 0x03, 0x28, 0x02, 0x52,
	0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x73, 0x18, 0x27, 0x20, 0x03, 0x28, 0x01, 0x52, 0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x28, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x65, 0x73, 0x18, 0x29, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x2a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x75, 0x67, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18,
	0x2b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x75, 0x67, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x52, 0x06, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x2c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x75, 0x67, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x73, 0x1a, 0x15, 0x0a, 0x05, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x2a, 0x45, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x49,
	0x58, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x4f, 0x4e, 0x54, 0x46, 0x49, 0x58,
	0x10, 0x05, 0x2a, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x55,
	0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x02, 0x3a, 0x23, 0x0a, 0x03, 0x65,
	0x78, 0x74, 0x12, 0x11, 0x2e, 0x62, 0x75, 0x67, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x74,
	0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e,
	0x6e, 0x65, 0x74, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x62, 0x75, 0x67, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72,
}

var (
	file_testdata_bugtracker_bugtracker_proto_rawDescOnce sync.Once
	file_testdata_bugtracker_bugtracker_proto_rawDescData = file_testdata_bugtracker_bugtracker_proto_rawDesc
)

func file_testdata_bugtracker_bugtracker_proto_rawDescGZIP() []byte {
	file_testdata_bugtracker_bugtracker_proto_rawDescOnce.Do(func() {
		file_testdata_bugtracker_bugtracker_proto_rawDescData = protoimpl.X.CompressGZIP(file_testdata_bugtracker_bugtracker_proto_rawDescData)
	})
	return file_testdata_bugtracker_bugtracker_proto_rawDescData
}

var file_testdata_bugtracker_bugtracker_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_testdata_bugtracker_bugtracker_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_testdata_bugtracker_bugtracker_proto_goTypes = []interface{}{
	(Status)(0),            // 0: bugtracker.Status
	(Type)(0),              // 1: bugtracker.Type
	(*Issue)(nil),          // 2: bugtracker.Issue
	(*KeyValuePair)(nil),   // 3: bugtracker.KeyValuePair
	(*Outer)(nil),          // 4: bugtracker.Outer
	(*AllTypes)(nil),       // 5: bugtracker.AllTypes
	(*Issue_Nested)(nil),   // 6: bugtracker.Issue.Nested
	(*AllTypes_Inner)(nil), // 7: bugtracker.AllTypes.Inner
}
var file_testdata_bugtracker_bugtracker_proto_depIdxs = []int32{
	0,  // 0: bugtracker.Issue.status:type_name -> bugtracker.Status
	1,  // 1: bugtracker.Issue.type:type_name -> bugtracker.Type
	3,  // 2: bugtracker.Issue.metadata:type_name -> bugtracker.KeyValuePair
	6,  // 3: bugtracker.Issue.nested:type_name -> bugtracker.Issue.Nested
	0,  // 4: bugtracker.AllTypes.status:type_name -> bugtracker.Status
	7,  // 5: bugtracker.AllTypes.inner:type_name -> bugtracker.AllTypes.Inner
	4,  // 6: bugtracker.AllTypes.outer:type_name -> bugtracker.Outer
	0,  // 7: bugtracker.AllTypes.statuses:type_name -> bugtracker.Status
	7,  // 8: bugtracker.AllTypes.inners:type_name -> bugtracker.AllTypes.Inner
	4,  // 9: bugtracker.AllTypes.outers:type_name -> bugtracker.Outer
	6,  // 10: bugtracker.Issue.Nested.y:type_name -> bugtracker.Issue.Nested
	2,  // 11: bugtracker.ext:extendee -> bugtracker.Issue
	2,  // 12: bugtracker.Outer.ext:extendee -> bugtracker.Issue
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	11, // [11:13] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_testdata_bugtracker_bugtracker_proto_init() }
func file_testdata_bugtracker_bugtracker_proto_init() {
	if File_testdata_bugtracker_bugtracker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_testdata_bugtracker_bugtracker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Issue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_testdata_bugtracker_bugtracker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_bugtracker_bugtracker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Outer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_bugtracker_bugtracker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_bugtracker_bugtracker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Issue_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testdata_bugtracker_bugtracker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllTypes_Inner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testdata_bugtracker_bugtracker_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_testdata_bugtracker_bugtracker_proto_goTypes,
		DependencyIndexes: file_testdata_bugtracker_bugtracker_proto_depIdxs,
		EnumInfos:         file_testdata_bugtracker_bugtracker_proto_enumTypes,
		MessageInfos:      file_testdata_bugtracker_bugtracker_proto_msgTypes,
		ExtensionInfos:    file_testdata_bugtracker_bugtracker_proto_extTypes,
	}.Build()
	File_testdata_bugtracker_bugtracker_proto = out.File
	file_testdata_bugtracker_bugtracker_proto_rawDesc = nil
	file_testdata_bugtracker_bugtracker_proto_goTypes = nil
	file_testdata_bugtracker_bugtracker_proto_depIdxs = nil
}
